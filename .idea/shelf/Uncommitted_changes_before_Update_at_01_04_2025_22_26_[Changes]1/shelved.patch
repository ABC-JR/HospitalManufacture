Index: app/src/main/java/com/example/hospitalinfrastructuremanagement/screens/MainApp.kt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.example.hospitalinfrastructuremanagement.screens\r\n\r\nimport android.annotation.SuppressLint\r\nimport androidx.compose.foundation.layout.size\r\nimport androidx.compose.material.icons.Icons\r\nimport androidx.compose.material.icons.filled.Add\r\nimport androidx.compose.material.icons.filled.List\r\nimport androidx.compose.material.icons.filled.Person\r\nimport androidx.compose.material3.ExperimentalMaterial3Api\r\nimport androidx.compose.material3.Icon\r\nimport androidx.compose.material3.NavigationBar\r\nimport androidx.compose.material3.NavigationBarItem\r\nimport androidx.compose.material3.Scaffold\r\nimport androidx.compose.material3.Text\r\nimport androidx.compose.material3.TopAppBar\r\nimport androidx.compose.runtime.Composable\r\nimport androidx.compose.runtime.getValue\r\nimport androidx.compose.runtime.mutableStateOf\r\nimport androidx.compose.runtime.remember\r\nimport androidx.compose.runtime.setValue\r\nimport androidx.compose.ui.Modifier\r\nimport androidx.compose.ui.graphics.vector.ImageVector\r\nimport androidx.compose.ui.unit.dp\r\nimport androidx.navigation.NavController\r\nimport androidx.navigation.compose.NavHost\r\nimport androidx.navigation.compose.composable\r\nimport androidx.navigation.compose.currentBackStackEntryAsState\r\nimport androidx.navigation.compose.rememberNavController\r\nimport coil.compose.AsyncImage\r\nimport com.example.hospitalinfrastructuremanagement.screens.Taskpage.Tasksforeach\r\nimport com.example.hospitalinfrastructuremanagement.screens.mainpage.MainScreen\r\nimport com.example.hospitalinfrastructuremanagement.screens.profilepage.ProfileScreen\r\nimport com.example.hospitalinfrastructuremanagement.screens.signinpage.Signscreen\r\n\r\n\r\n@SuppressLint(\"UnusedMaterial3ScaffoldPaddingParameter\")\r\n@Composable\r\nfun MainApp() {\r\n    val navconroller = rememberNavController()\r\n    val navBackStackEntry by navconroller.currentBackStackEntryAsState()\r\n    val currentRoute = navBackStackEntry?.destination?.route\r\n    val showBars = currentRoute != \"signin\"\r\n\r\n\r\n    Scaffold(\r\n        topBar ={\r\n            if(showBars){\r\n                MyTopAppBar()\r\n            }\r\n\r\n        } ,\r\n        bottomBar = {\r\n            if(showBars){\r\n                BottomBar(navconroller)\r\n            }\r\n\r\n        }\r\n    )\r\n    {\r\n        padding->\r\n\r\n        val isUserLoggedIn = false\r\n\r\n        val destination = if (isUserLoggedIn) \"mainpage\" else \"signin\"\r\n\r\n        NavHost(navconroller , startDestination = destination) {\r\n            composable(\"signin\") {\r\n                Signscreen(navconroller )\r\n            }\r\n            composable(\"mainpage\") {\r\n                MainScreen(padding ,  navconroller)\r\n            }\r\n            composable(\"tasks\") {\r\n                TasksScreen()\r\n            }\r\n            composable(\"profile\") {\r\n                ProfileScreen(padding , navconroller)\r\n            }\r\n        }\r\n\r\n    }\r\n}\r\n\r\n\r\n\r\n\r\n@OptIn(ExperimentalMaterial3Api::class)\r\n@Composable\r\nfun MyTopAppBar() {\r\n    TopAppBar(\r\n        title = { Text(\"Hospital\") },\r\n        navigationIcon = {\r\n            AsyncImage(\r\n                model = \"https://i.pinimg.com/1200x/2e/02/bf/2e02bf2de46b5cbddf3cfbc16e83e822.jpg\",\r\n                contentDescription = \"logo\",\r\n                modifier = Modifier.size(50.dp)\r\n            )\r\n        }\r\n    )\r\n}\r\n\r\n\r\n\r\n\r\ndata class triple(\r\n    val name:String,\r\n    val route:String,\r\n    val id: ImageVector\r\n)\r\n\r\n@Composable\r\nfun BottomBar(navconroller : NavController){\r\n    val list = listOf(\r\n\r\n        triple(\"Hospital\" , \"mainpage\" , Icons.Default.Add) ,\r\n        triple(\"Tasks\" , \"tasks\" ,Icons.Default.List ) ,\r\n        triple(\"Profile\" , \"profile\" , Icons.Default.Person)\r\n    )\r\n\r\n    var selectedid by remember{ mutableStateOf(0)}\r\n\r\n    NavigationBar{\r\n        list.forEachIndexed{\r\n            index , item->\r\n            NavigationBarItem(\r\n                selected = selectedid ==index ,\r\n                onClick = {\r\n                    selectedid = index\r\n                    navconroller.navigate(item.route)\r\n                } ,\r\n                icon = {\r\n                    Icon(item.id , \"\")\r\n                } ,\r\n                label = {\r\n                    Text(text =item.name)\r\n                }\r\n            )\r\n        }\r\n    }\r\n}
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/java/com/example/hospitalinfrastructuremanagement/screens/MainApp.kt b/app/src/main/java/com/example/hospitalinfrastructuremanagement/screens/MainApp.kt
--- a/app/src/main/java/com/example/hospitalinfrastructuremanagement/screens/MainApp.kt	(revision 7a35f544bf60dd07b069f8b2bba34360a879c997)
+++ b/app/src/main/java/com/example/hospitalinfrastructuremanagement/screens/MainApp.kt	(date 1743506566166)
@@ -71,7 +71,7 @@
                 MainScreen(padding ,  navconroller)
             }
             composable("tasks") {
-                TasksScreen()
+                Tasksforeach(padding  , navconroller)
             }
             composable("profile") {
                 ProfileScreen(padding , navconroller)
